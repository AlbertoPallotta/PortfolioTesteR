% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{align_to_timeframe}
\alias{align_to_timeframe}
\title{Align High-Frequency Data to Low-Frequency Dates}
\usage{
align_to_timeframe(
  high_freq_data,
  low_freq_dates,
  method = c("forward_fill", "nearest", "interpolate")
)
}
\arguments{
\item{high_freq_data}{High-frequency data (e.g., daily)}

\item{low_freq_dates}{Target dates to align to}

\item{method}{"forward_fill", "nearest", or "interpolate"}
}
\value{
Data aligned to low-frequency dates
}
\description{
Aligns indicators calculated on one timeframe (e.g., daily) to a trading
timeframe (e.g., weekly). Uses data.table rolling joins for speed.
}
\examples{
# Create sample data for the example
daily_data <- data.table::data.table(
  Date = seq(as.Date("2023-01-01"), by = "day", length.out = 100),
  AAPL = runif(100, 100, 110),
  MSFT = runif(100, 200, 210)
)

# Create weekly dates to align to
weekly_dates <- seq(as.Date("2023-01-01"), by = "week", length.out = 15)

# Align daily data to weekly dates
weekly_aligned <- align_to_timeframe(daily_data, weekly_dates, "forward_fill")
}
